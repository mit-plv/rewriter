name: CI (Coq, docker)

on:
  push:
    branches: [ master ]
  pull_request:
  merge_group:
  workflow_dispatch:
  release:
    types: [published]
  schedule:
    - cron: '0 0 1 * *'

jobs:
  build-docker:

    strategy:
      fail-fast: false
      matrix:
        #coq-version: [ '8.16' ]
        #extra-gh-reportify: [ '' ]
        include:
        - coq-version: 'dev'
          extra-gh-reportify: '--warnings'

    runs-on: ubuntu-latest

    concurrency:
      group: ${{ github.workflow }}-${{ matrix.coq-version }}-${{ github.head_ref || github.run_id }}
      cancel-in-progress: true

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
    - name: all
      uses: coq-community/docker-coq-action@v1
      with:
        coq_version: ${{ matrix.coq-version }}
        ocaml_version: default
        custom_script: |
          sudo chmod -R a=u .
          # Work around https://github.com/actions/checkout/issues/766
          git config --global --add safe.directory "*"
          echo '::group::install general dependencies'
          sudo apt-get update -y
          sudo apt-get install -y python-is-python3 python3
          eval $(opam env)
          echo '::endgroup::'
          echo '::remove-matcher owner=coq-problem-matcher::'
          CI=1 etc/ci/describe-system-config.sh
          etc/ci/github-actions-make.sh ${{ matrix.extra-gh-reportify }} -j2 all
          etc/ci/github-actions-make.sh ${{ matrix.extra-gh-reportify }} -j2 perf-Sanity

  docker-check-all:
    runs-on: ubuntu-latest
    needs: build-docker
    if: always()
    steps:
    - run: echo 'The triggering workflow passed'
      if: ${{ needs.build-docker.result == 'success' }}
    - run: echo 'The triggering workflow failed' && false
      if: ${{ needs.build-docker.result != 'success' }}
