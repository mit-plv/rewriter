TIMED?=
TIMECMD?=
# Use command time on linux, gtime on Mac OS
TIMEFMT?="$(if $(findstring undefined, $(flavor 1)),$@,$(1)) (real: %e, user: %U, sys: %S, mem: %M ko)"
ifeq (0,$(shell command time -f "" true >/dev/null 2>/dev/null; echo $$?))
STDTIME_FULL?=command time -f $(TIMEFMT)
else
ifeq (0,$(shell gtime -f "" true >/dev/null 2>/dev/null; echo $$?))
STDTIME_FULL?=gtime -f $(TIMEFMT)
else
STDTIME_FULL?=command time
endif
endif
STDTIME?=$(STDTIME_FULL)

TIMER=$(if $(TIMED), $(STDTIME), $(TIMECMD))
TIMECMD_FULL?=
TIMER_FULL=$(if $(TIMED), $(STDTIME_FULL), $(TIMECMD_FULL))

COQ_VERSION_FILE = .coq-version
COQ_VERSION_PREFIX = The Coq Proof Assistant, version
ROCQ_VERSION_PREFIX = The Rocq Prover, version
COQ_VERSION_COQTOP_CMD := $(COQBIN)coqtop </dev/null
COQ_VERSION_COQC_CMD := $(COQBIN)coqc --version
COQC_VERSION_FULL := $(shell $(COQ_VERSION_COQC_CMD) 2>/dev/null)
COQ_VERSION := $(firstword $(subst $(ROCQ_VERSION_PREFIX),,$(subst $(COQ_VERSION_PREFIX),,$(COQC_VERSION_FULL))))

COQ_EXTENDED_VERSION:=$(strip $(shell $(COQ_VERSION_COQTOP_CMD) 2>/dev/null) $(COQC_VERSION_FULL))
COQ_EXTENDED_VERSION_OLD:=$(strip $(shell cat $(COQ_VERSION_FILE) 2>/dev/null))

ifneq (,$(filter 8.15%,$(COQ_VERSION)))
EXPECTED_EXT:=.v815
ML_DESCRIPTION := "Coq v8.15"
META_FILE_FRAGMENT :=
else
META_FILE_FRAGMENT := src/Rewriter/Util/plugins/META.coq-rewriter
ifneq (,$(filter 8.16%,$(COQ_VERSION)))
EXPECTED_EXT:=.v816
ML_DESCRIPTION := "Coq v8.16"
else
ifneq (,$(filter 8.17%,$(COQ_VERSION)))
EXPECTED_EXT:=.v817
ML_DESCRIPTION := "Coq v8.17"
else
ifneq (,$(filter 8.18%,$(COQ_VERSION)))
EXPECTED_EXT:=.v818
ML_DESCRIPTION := "Coq v8.18"
else
ifneq (,$(filter 8.19%,$(COQ_VERSION)))
EXPECTED_EXT:=.v819
ML_DESCRIPTION := "Coq v8.19"
else
ifneq (,$(filter 8.20%,$(COQ_VERSION)))
EXPECTED_EXT:=.v820
ML_DESCRIPTION := "Coq v8.20"
else
ifneq (,$(filter 8.%,$(COQ_VERSION)))
EXPECTED_EXT:=.v821
ML_DESCRIPTION := "Coq v8.21"
else
ifneq (,$(filter 9.0.% 9.0+%,$(COQ_VERSION)))
EXPECTED_EXT:=.v90
ML_DESCRIPTION := "Coq v9.0"
else
EXPECTED_EXT:=.v91
ML_DESCRIPTION := "Coq v9.1"
endif
endif
endif
endif
endif
endif
endif
endif

COMPATIBILITY_FILES := \
	src/Rewriter/Util/plugins/definition_by_tactic.ml \
	src/Rewriter/Util/plugins/definition_by_tactic.mli \
	src/Rewriter/Util/plugins/definition_by_tactic_plugin.mlg \
	src/Rewriter/Util/plugins/definition_by_tactic_plugin.mllib \
	src/Rewriter/Util/plugins/inductive_from_elim.ml \
	src/Rewriter/Util/plugins/inductive_from_elim.mli \
	src/Rewriter/Util/plugins/inductive_from_elim_plugin.mlg \
	src/Rewriter/Util/plugins/inductive_from_elim_plugin.mllib \
	src/Rewriter/Util/plugins/rewriter_build.ml \
	src/Rewriter/Util/plugins/rewriter_build.mli \
	src/Rewriter/Util/plugins/rewriter_build_plugin.mlg \
	src/Rewriter/Util/plugins/rewriter_build_plugin.mllib \
	src/Rewriter/Util/plugins/strategy_tactic.ml \
	src/Rewriter/Util/plugins/strategy_tactic.mli \
	src/Rewriter/Util/plugins/strategy_tactic_plugin.mlg \
	src/Rewriter/Util/plugins/strategy_tactic_plugin.mllib \
	src/Rewriter/Util/plugins/ltac2_extra.ml \
	src/Rewriter/Util/plugins/ltac2_extra.mli \
	src/Rewriter/Util/plugins/ltac2_extra_plugin.mlg \
	src/Rewriter/Util/plugins/ltac2_extra_plugin.mllib \
	src/Rewriter/Util/plugins/RewriterBuildRegistry.v \
	src/Rewriter/Util/plugins/RewriterBuild.v \
	src/Rewriter/Util/plugins/StrategyTactic.v \
	src/Rewriter/Util/plugins/Ltac2Extra.v \
	src/Rewriter/Util/Tactics2/Constr.v \
	src/Rewriter/Util/Tactics2/DestCase.v \
	src/Rewriter/Util/Tactics2/DestProj.v \
	src/Rewriter/Util/Tactics2/Proj.v \
	#
